#!/usr/bin/env bash

. manifest.sh

if [[ -z $UNZIP_ARTIFACT ]]; then
    ARTIFACT_NAME=application.jar
else
    ARTIFACT_NAME=application.zip
fi

function snap_download {
    if [[ -z $HTTP_USER ]] || [[ -z $HTTP_PASSWORD ]] || [[ -z $ARTIFACT_URL ]]; then
        echo "-----> ERROR: You must specify HTTP_USER and HTTP_PASSWORD via the environment and ARTIFACT_URL via manifest.sh"
        exit 1
    fi

    s3location=$(wget -S -q --max-redirect=0 --auth-no-challenge --http-user=$HTTP_USER --http-password=$HTTP_PASSWORD --header 'Accept:application/vnd.snap-ci.com.v1+json' $ARTIFACT_URL 2>&1 | grep Location | sed 's/\s*Location: //g')
    wget -q --header 'Accept:application/vnd.snap-ci.com.v1+json' -O $ARTIFACT_NAME $s3location
}

function github_releases_download {
    if [[ -z $GITHUB_ACCESS_TOKEN ]] || [[ -z $ARTIFACT_URL ]]; then
            echo "-----> ERROR: You must specify GITHUB_ACCESS_TOKEN via the environment and ARTIFACT_URL via manifest.sh"
            exit 1
    fi

    wget --header 'Accept:application/octet-stream' --header "Authorization: token ${GITHUB_ACCESS_TOKEN}" -O $ARTIFACT_NAME "${ARTIFACT_URL}"
}

function generic_download {
    wget -q -O $ARTIFACT_NAME $ARTIFACT_URL
}

if [[ -n $ARTIFACT_URL ]]; then
    case $DOWNLOAD_FROM in
        github-releases)
          echo "-----> Downloading $ARTIFACT_URL from Github release"
          github_releases_download
          ;;
        snap)
          echo "-----> Downloading $ARTIFACT_URL from Snap CI"
          snap_download
          ;;
        *)
          echo "-----> Downloading $ARTIFACT_URL"
          generic_download
          ;;
    esac
fi

if [[ -n $UNZIP_ARTIFACT ]]; then
    unzip $ARTIFACT_NAME
fi
